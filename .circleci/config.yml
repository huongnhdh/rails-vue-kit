version: 2

jobs:
  build:
    working_directory: ~/rails-vue-kit
    docker:
      - image: circleci/ruby:2.6.3-node
        environment:
          RAILS_ENV: test
          CW_LMP1_ROOM: "200427540"
          CW_API_TOKEN: "2368e308d764aaf23bb1874dc61160f2"
    steps:
      - type: shell
        name: 'Define ChatWork notification'
        command: |-
          cat >> $BASH_ENV <<EOL
            function send {
              when=\$1
              # messages by status
              case \$when in
                "start")
                  status_msg="starting..."
                  ;;
                "finished")
                  status_msg="finished (cracker)"
                  ;;
                "failed")
                  status_msg="failed (sweat)"
                  ;;
                *)
                  echo "No process for status: \$when"
                  ;;
              esac
              #
              # messages by branch
              case \${CIRCLE_BRANCH} in
                "master")
                  deploy_env=production
                  ;;
                "delivery")
                  deploy_env=staging
                  ;;
                "develop")
                  deploy_env=inter
                  ;;
                *)
                  echo "This branch \${CIRCLE_BRANCH} is not deploy branch"
                  ;;
              esac
              set
              if  [ -n "\$deploy_env" ] && [ -n "\$status_msg" ]; then
                body_msg="LMPOne deploy on 「\$deploy_env」 environment was \$status_msg"
                curl -X POST -H "X-ChatWorkToken: \${CW_API_TOKEN}" -d "body=[info]\$body_msg[/info]&self_unread=0" "https://api.chatwork.com/v2/rooms/\${CW_LMP1_ROOM}/messages"
                echo
              fi
            }
          EOL
          source $BASH_ENV

      - type: shell
        name: "notify for start"
        command: send "start"
      - checkout
      - run: gem install bundler:2.0.1
      - type: cache-restore
        key: bundle-{{ checksum "Gemfile.lock" }}
      - run: bundle install --path vendor/bundle
      - type: cache-save
        key: bundle-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle
      - run: bundle exec rubocop
      - type: shell
        name: "notify for finished"
        command: send "finished"
      - type: shell
        name: "notify for failed"
        command: send "failed"
